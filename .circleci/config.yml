version: 2.1

# These "CircleCI Orbs" are reusable bits of configuration that can be shared
# across projects.  See https://circleci.com/orbs/ for more information.
orbs:
  # `oss` is a local reference to the package.  The source for Apollo Orbs can
  # be found at http://github.com/apollographql/CircleCI-Orbs/.
  # We could use Renovate to bump this version via PR, but that's not setup now.
  oss: apollo/oss-ci-cd-tooling@0.0.20
  node: circleci/node@5.1.0

commands:
  install-volta:
    description: Install volta to manage Node/npm versions
    steps:
      - run:
          name: Install volta
          # Teach the volta installer to update Circle's special env
          # file instead of the default.
          command: |
            curl https://get.volta.sh | PROFILE="$BASH_ENV" bash

  setup-node:
    parameters:
      node-version:
        type: string
        default: ''
    steps:
      - install-volta
      - checkout
      - when:
          condition: << parameters.node-version >>
          steps:
          - run: volta pin node@<< parameters.node-version >>
      - run: node --version
      - run: npm --version
      - node/install-packages
# Important! When adding a new job to `jobs`, make sure to define when it
# executes by also adding it to the `workflows` section below!
jobs:
  NodeJS:
    parameters:
      node-version:
        type: string
    docker:
    - image: cimg/base:stable
    steps:
      - setup-node:
          node-version: <<parameters.node-version>>
      - run: npm run test:ci
      - run: npm run coverage:upload
      - store_test_results:
          path: junit.xml

  Prettier:
    docker:
    - image: cimg/base:stable
    steps:
      - setup-node
      - run: npm run prettier-check

  Spell check:
    docker:
    - image: cimg/base:stable
    steps:
      - setup-node
      - run: npm run spell-check

  # We make CI fail if any file contains FIX and ME right next to each other.
  # This means that when working on a big PR, you can throw in notes that you
  # are forced to come back to before merging the PR.  Note that we don't block
  # the tarball or publish steps on this, since you may want to try out builds
  # on branches that still contain unresolved problems. In order for this file
  # to not cause this job to fail, we obfuscate the target string by encoding
  # the last letter in in hex (\x45 = E).
  "Check for FIXM\x45":
    docker:
    - image: cimg/base:stable
    steps:
    - add_ssh_keys
    - checkout
    - run:
        name: "Check for FIXM\x45"
        # ! means this fails if git grep succeeds, ie if there are any matches
        command: "! git grep FIXM\x45"

# XXX We used to use this filter to only run a "Docs" job on docs branches.
#     Now we use it to disable all jobs. It's unclear if there's a simpler way
#     to do this!
common_non_publish_filters: &common_non_publish_filters
  filters:
    branches:
      # If 'docs' is found, with word boundaries on either side, skip.
      ignore: /.*?\bdocs\b.*/
    # Ensure every job has `tags` filters since the publish steps have tags.
    # This is some wild configuration thing that's pretty hard to figure out.
    tags:
      only: /.*/

common_publish_filters: &common_publish_filters
  filters:
    # Only run pre-publish and publish steps on specific tags.
    tags:
      only: /^publish\/[0-9]+$/
    # We want the publish to trigger on the above tag, not any branch.
    branches:
      ignore: /.*/

workflows:
  Build:
    jobs:
      - NodeJS:
          name: NodeJS << matrix.node-version >>
          matrix:
            parameters:
              node-version:
                - "14"
                - "16"
                - "18"
                - "20"
      - "Check for FIXM\x45"
      - Prettier
      - Spell check
      - oss/lerna_tarballs:
          name: Package tarballs
          <<: *common_non_publish_filters
          requires:
            - NodeJS
            - Prettier
      - oss/dry_run:
          name: Dry-run
          <<: *common_publish_filters
          requires:
            - NodeJS
            - Prettier
      - oss/confirmation:
          name: Confirmation
          type: approval
          <<: *common_publish_filters
          requires:
            - Dry-run
      - oss/publish:
          name: Publish
          <<: *common_publish_filters
          requires:
            - Confirmation
